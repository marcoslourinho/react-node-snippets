{

	"_comment": "Marcos Lourinho Snippets do Dev in React, React Native and NodeJS",
	"create new react component": {
		"prefix": "rc",
		"body": [
			"import React, {Component} from 'react'",
			"import styles from './styles'",
			"",
			"export default class ${1} extends Component {",
			"",
			"\t render() {",
			"\t \t return(",
			"\t\t\t<div className=''>",
			"",
			"\t\t\t</div>",
			"\t \t );",
			"\t };",
			"}",
			""
		],
		"description": "react native new component"
	},
	"create new react stateless component": {
		"prefix": "rsc",
		"body": [
			"import React from 'react'",
			"import styles from './styles'",
			"",
			"const ${1} = () => (",
			"\t<div className=''>",
			"",
			"\t</div>",
			");",
			"",
			"export default ${1};"
		],
		"description": "reactjs new stateless component"
	},
	"create new react native component": {
		"prefix": "rnc",
		"body": [
			"import React, {Component} from 'react'",
			"import {View} from 'react-native'",
			"import styles from './styles'",
			"",
			"export default class ${1} extends Component {",
			"",
			"\t render() {",
			"\t \t return(",
			"\t \t \t <View>",
			"",
			"\t \t \t </View>",
			"\t \t );",
			"\t };",
			"}",
			""
		],
		"description": "react native new component"
	},
	"create new react native stateless component": {
		"prefix": "rnsc",
		"body": [
			"import React, {Component} from 'react'",
			"import {Text} from 'react-native'",
			"import styles from './styles'",
			"",
			"const ${1} = () => (",
			"\t<Text> component </Text>",
			"",
			");",
			"",
			"export default ${1};"
		],
		"description": "react native new stateless component"
	},
	"create new nodejs controller": {
		"prefix": "nodec",
		"body": [
			"",
			"module.exports = {",
			"",
			"\tasync create(req, res) {",
			"\t \ttry {",
			"\t \t //scripts",
			"\t \t} catch (err) {",
			"\t \t \treturn next(err);",
			"\t \t}",
			"\t},",
			"",
			"\tasync list(req, res) {",
			"\t \ttry {",
			"\t \t //scripts",
			"\t \t} catch (err) {",
			"\t \t \treturn next(err);",
			"\t \t}",
			"\t},",
			"",
			"\tasync edit(req, res) {",
			"\t \ttry {",
			"\t \t //scripts",
			"\t \t} catch (err) {",
			"\t \t \treturn next(err);",
			"\t \t}",
			"\t },",
			"",
			"\tasync update(req, res) {",
			"\t \ttry {",
			"\t \t //scripts",
			"\t \t} catch (err) {",
			"\t \t \treturn next(err);",
			"\t \t}",
			"\t },",
			"",
			"\tasync destroy(req, res) {",
			"\t \ttry {",
			"\t \t //scripts",
			"\t \t} catch (err) {",
			"\t \t \treturn next(err);",
			"\t \t}",
			"\t }",
			"",
			"}"
		],
		"description": "nodejs new controller"
	},
	"create new nodejs model": {
		"prefix": "nodem",
		"body": [
			"const mongoose = require('mongoose');",
			"",
			"const ${1}Schema = new mongoose.Schema({",
			"",
			"\tusername: {",
			"\t \ttype: String,",
			"\t \tunique: true,",
			"\t \trequired: true,",
			"\t \tlowercase: true,",
			"\t },",
			"",
			"\tcreatedAt: {",
			"\t \ttype: Date,",
			"\t \tdefault: Date.now,",
			"\t},",
			"",
			"\tupdatedAt: {",
			"\t \ttype: Date,",
			"\t \tdefault: Date.now,",
			"\t}",
			"});",
			"",
			"mongoose.model('${1}', ${1}Schema);",
			""
		],
		"description": "react native component"
	},
}
